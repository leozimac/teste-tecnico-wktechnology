@model WebApp.Models.CreateCategoryViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>CreateCategoryViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @if (ViewBag.ResponseDetails != null)
    {
        if (ViewBag.ResponseDetails.StatusCode == StatusCodes.Status500InternalServerError)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <p><strong>An error ocurred</strong></p>
                <p>@ViewBag.ResponseDetails.Messages</p>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        else
        {
            <div class="alert alert-info alert-dismissible fade show" role="alert">
                <p>@ViewBag.ResponseDetails.Messages</p>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
    }

    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
